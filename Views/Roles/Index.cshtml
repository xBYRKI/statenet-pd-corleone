@model IEnumerable<ApplicationRole>
@using statenet_lspd.Helpers
@{
    ViewData["Title"] = "Rollenverwaltung";
}

<div class="max-w-6xl mx-auto mt-10 px-6 py-8 bg-white dark:bg-gray-800 rounded-lg shadow-md">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <div>
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white flex items-center gap-2">
                <i class="fa-solid fa-shield-halved text-indigo-600 dark:text-indigo-400"></i>
                Rollenübersicht
            </h1>
            <p class="text-sm text-gray-500 dark:text-gray-400">Verwalte alle verfügbaren Rollen für Mitarbeiter</p>
        </div>
        <div class="mt-4 md:mt-0">
            <button onclick="openCreateRoleModal()"
                    class="inline-flex items-center bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow text-sm font-medium transition">
                <i class="fa-solid fa-plus mr-2"></i> Neue Rolle
            </button>
        </div>
    </div>

    <div class="overflow-x-auto rounded-md border border-gray-200 dark:border-gray-700">
        <table class="min-w-full table-auto text-sm">
            <thead class="bg-gray-50 dark:bg-gray-700 text-gray-600 dark:text-gray-200">
                <tr>
                    <th class="px-4 py-3 text-left">Rollenname</th>
                    <th class="px-4 py-3 text-left">Discord-Rollen-ID</th>
                    <th class="px-4 py-3 text-left">Farbe</th>
                    <th class="px-4 py-3 text-left">Mitglieder</th>
                    <th class="px-4 py-3 text-right">Aktionen</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                @foreach (var role in Model)
                {
                    <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                        <td class="px-4 py-3">@role.Name</td>
                        <td class="px-4 py-3">@role.DiscordRoleId</td>
                        <td class="px-4 py-3">
                            <span class="inline-block px-3 py-1 rounded text-xs font-semibold shadow"
                                  style="background-color:@role.ColorHex; color:@ColorUtils.GetContrastingTextColor(role.ColorHex)">
                                @role.ColorHex
                            </span>
                        </td>
                        <td class="px-4 py-3">@role.UserCount</td>
                        <td class="px-4 py-3 text-right space-x-2 whitespace-nowrap">
                            <button onclick="openEditRoleModal('@role.Id')" class="text-blue-600 hover:underline">
                                <i class="fa-solid fa-pen-to-square mr-1"></i> Bearbeiten
                            </button>
                            @if (role.UserCount == 0)
                            {
                                <button onclick="openDeleteRoleModal('@role.Id')" class="text-red-600 hover:underline">
                                    <i class="fa-solid fa-trash mr-1"></i> Löschen
                                </button>
                            }
                            else
                            {
                                <span class="text-gray-400 italic">Nicht löschbar</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="roleModalContainer"></div>

    @section Scripts {
        <script>
            function openCreateRoleModal() {
                fetch('/Roles/Create')
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById('roleModalContainer').innerHTML = html;
                        toggleModal('createRoleModal');
                    });
            }

            function openEditRoleModal(id) {
                fetch(`/Roles/Edit/${id}`)
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById('roleModalContainer').innerHTML = html;
                        toggleModal('editRoleModal');
                    });
            }

            function openDeleteRoleModal(id) {
                fetch(`/Roles/Delete/${id}`)
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById('roleModalContainer').innerHTML = html;
                        toggleModal('deleteRoleModal');
                    });
            }
        </script>
    }
</div>
