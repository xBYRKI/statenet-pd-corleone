@model IEnumerable<statenet_lspd.Models.Sanktion>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery AntiForgery
@using System.Text.Json
@{
    ViewData["Title"] = "Sanktionenübersicht";
    var sanctions = Model ?? Enumerable.Empty<statenet_lspd.Models.Sanktion>();
    var categories = sanctions.Select(s => s.Kategorie).Distinct().OrderBy(c => c).ToList();
    var tokens = AntiForgery.GetAndStoreTokens(Context);
    var csrfToken = tokens.RequestToken;
    // Serialize categories for client-side
    var categoriesJson = JsonSerializer.Serialize(categories);
}

<div class="max-w-6xl mx-auto mt-10 px-6 py-8 bg-white dark:bg-gray-800 rounded-lg shadow-md">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
        <div>
            <h1 class="text-3xl font-bold text-gray-900 dark:text-white flex items-center gap-2">
                <i class="fa-solid fa-gavel text-indigo-600 dark:text-indigo-400"></i>
                Sanktionskatalog
            </h1>
            <p class="text-sm text-gray-500 dark:text-gray-400">Verwalte alle vorhandenen Sanktionen für die LSPD</p>
        </div>
        <div class="mt-4 md:mt-0 flex space-x-2">
            <button onclick="openCreate()" class="inline-flex items-center bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow text-sm font-medium transition">
                <i class="fa-solid fa-plus mr-2"></i> Neue Sanktion
            </button>
            <button id="toggleSort" class="inline-flex items-center bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded shadow text-sm font-medium transition">
                <i class="fa-solid fa-lock-open mr-2"></i> Sortierung entsperren
            </button>
        </div>
    </div>

    @foreach (var cat in categories)
    {
        <h2 class="text-xl font-semibold text-gray-800 dark:text-gray-200 mt-8 mb-4">@cat</h2>
        <div class="overflow-x-auto rounded-md border border-gray-200 dark:border-gray-700 mb-6">
            <table class="min-w-full table-auto text-sm">
                <thead class="bg-gray-50 dark:bg-gray-700 text-gray-600 dark:text-gray-200">
                    <tr>
                        <th class="px-4 py-3"></th>
                        <th class="px-4 py-3 text-left">Vergehen</th>
                        <th class="px-4 py-3 text-left">Beschreibung</th>
                        <th class="px-4 py-3 text-left">Geldstrafe</th>
                        <th class="px-4 py-3 text-left">Verwarnung</th>
                        <th class="px-4 py-3 text-left">Degradierung</th>
                        <th class="px-4 py-3 text-left">Suspendierung</th>
                        <th class="px-4 py-3 text-right">Aktionen</th>
                    </tr>
                </thead>
                <tbody id="sortable-@cat" class="divide-y divide-gray-200 dark:divide-gray-700">
                    @foreach (var s in sanctions.Where(x => x.Kategorie == cat))
                    {
                        <tr data-id="@s.Id" class="hover:bg-gray-50 dark:hover:bg-gray-700 transition">
                            <td class="px-4 py-3 cursor-grab text-center"><i class="fa-solid fa-grip-vertical"></i></td>
                            <td class="px-4 py-3">@s.Vergehen</td>
                            <td class="px-4 py-3">@s.Beschreibung</td>
                            <td class="px-4 py-3">@(s.Geldstrafe.HasValue ? s.Geldstrafe.Value.ToString("0.##") + "€" : "-")</td>
                            <td class="px-4 py-3">@(s.Verwarnung ? "Ja" : "Nein")</td>
                            <td class="px-4 py-3">@(s.Degradierung ? "Ja" : "Nein")</td>
                            <td class="px-4 py-3">@(s.Suspendierung ? "Ja" : "Nein")</td>
                            <td class="px-4 py-3 text-right space-x-2 whitespace-nowrap">
                                <button onclick="openEdit(@s.Id)" class="text-blue-600 hover:underline"><i class="fa-solid fa-pen-to-square mr-1"></i>Bearbeiten</button>
                                <button onclick="openDelete(@s.Id)" class="text-red-600 hover:underline"><i class="fa-solid fa-trash mr-1"></i>Löschen</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <div id="modalContainer"></div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
        <script>
            // Serialize categories for JS
            const categoriesList = @Html.Raw(categoriesJson);
            const sortableInstances = {};
            categoriesList.forEach(cat => {
                const el = document.getElementById(`sortable-${cat}`);
                if (el) {
                    sortableInstances[cat] = Sortable.create(el, {
                        animation: 150,
                        handle: '.cursor-grab',
                        disabled: true,
                        onEnd: () => {
                            const order = Array.from(el.querySelectorAll('tr')).map(r => parseInt(r.dataset.id));
                            fetch('@Url.Action("UpdateOrder")', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json', 'RequestVerificationToken': csrfToken },
                                body: JSON.stringify({ category: cat, order })
                            });
                        }
                    });
                }
            });
            let sortEnabled = false;
            document.getElementById('toggleSort').addEventListener('click', () => {
                sortEnabled = !sortEnabled;
                document.getElementById('toggleSort').innerHTML = sortEnabled
                    ? '<i class="fa-solid fa-lock mr-2"></i>Sortierung sperren'
                    : '<i class="fa-solid fa-lock-open mr-2"></i>Sortierung entsperren';
                Object.values(sortableInstances).forEach(inst => inst.option('disabled', !sortEnabled));
            });
            function openCreate() { fetch('/Sanktionen/Create').then(r=>r.text()).then(html=>{document.getElementById('modalContainer').innerHTML=html;toggleModal('createSanktionModal');}); }
            function openEdit(id)   { fetch(`/Sanktionen/Edit/${id}`).then(r=>r.text()).then(html=>{document.getElementById('modalContainer').innerHTML=html;toggleModal('editSanktionModal');}); }
            function openDelete(id) { fetch(`/Sanktionen/Delete/${id}`).then(r=>r.text()).then(html=>{document.getElementById('modalContainer').innerHTML=html;toggleModal('deleteSanktionModal');}); }
        </script>
    }
</div>